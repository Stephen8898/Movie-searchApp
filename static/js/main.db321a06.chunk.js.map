{"version":3,"sources":["components/Nav.js","components/About.js","components/Body.js","components/Carousel.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","style","backgroundColor","href","width","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","componentClass","Link","to","Component","About","color","alt","marginTop","marginBottom","Body","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","search","target","value","state","backdrop_path","poster_path","poster","title","overview","film","bind","assertThisInitialized","componentDidMount","movieUrl","concat","process","fetch","then","results","json","data","map","movie","temp","original_title","_this$state","link","Fragment","backgroundImage","onMouseOver","site","configData","baseImgUrl","Carousel","movieId","backDrop","config","NowPlayingId","findFilm","_this2","url","result","images","secure_base_url","posterUrl","poster_sizes","backDropUrl","backdrop_sizes","updateImage","posterPath","backDropPath","_this3","playingUrl","res","forEach","element","push","index","Math","floor","random","giveId","window","setInterval","arr","_this4","homepage","document","addEventListener","paddingTop","paddingBottom","backgroundRepeat","backgroundSize","data-ride","height","onClick","prev","role","data-slide","aria-hidden","Body_Body","Footer","rel","App","BrowserRouter","backgroundPosition","backgroundAttachment","Nav_Nav","Switch","Route","exact","path","component","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db321a06.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Nav extends Component {\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg\" style={{backgroundColor:\"#2d2d2d\"}}>\r\n        <a className=\"navbar-brand\" href=\"#\"><img style={{width:\"6rem\"}}src=\"/assets/Tmdb-logo.png\"/></a>\r\n        <button className=\"navbar-toggler\" style={{backgroundColor:'#8c8c8c'}} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/\" componentClass={Link} to=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\"href=\"/about\" componentClass={Link} to=\"/about\">About</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n      <div className=\"row justify-content-center\" style={{color:'#fff'}}>\r\n      <h1>Lehman Web Development Class</h1>\r\n        <img src=\"assets/leh-logo.png\" alt=\"lehman logo\" style={{marginTop:'5rem', marginBottom:'5rem'}}/>\r\n      <div className=\"row\" style={{color:'#fff', marginTop:'5rem'}}>\r\n      <h3>Maybe there was an old trapper that lived out here and maybe one day he went to check his beaver traps, \r\n        and maybe he fell into the river and drowned. Only think about one thing at a time. Don't get greedy. \r\n        The only thing worse than yellow snow is green snow. It's important to me that you're happy. \r\n        We artists are a different breed of people. We're a happy bunch.</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Nav from './Nav'\r\nimport Carousel from './Carousel'\r\nimport './styles/Body.css'\r\n\r\nlet baseUrl = 'https://api.themoviedb.org/3/';\r\nlet configData = null;\r\nlet baseImgUrl = null;\r\n// let tvId = null;\r\nlet num = 0\r\nconst API_KEY = process.env.REACT_APP_TMDB_KEY\r\n\r\nexport default class Body extends Component {\r\n   constructor(props){\r\n     super(props)\r\n      this.state ={\r\n        // movieId: 297802,\r\n        backdrop_path: '',\r\n        poster_path:'',\r\n        poster: '',\r\n        title: '',\r\n        overview: ''\r\n      }\r\n\r\n      this.film = this.film.bind(this)\r\n      this.componentDidMount = this.componentDidMount.bind(this)\r\n    }\r\n    componentDidMount(){\r\n      this.film()\r\n    }\r\n      // search(){\r\n      //   let searchUrl = \"\".concat(baseUrl, 'search/movie?', 'api_key=', API_KEY, '&language=en-US&query=', this.state.search)\r\n      //   fetch(searchUrl)\r\n      //   .then((results) => {\r\n      //     return results.json()\r\n      //   })\r\n      //   .then((json)=>{\r\n      //     return json.results\r\n      //   })\r\n      //   .then((data) =>{\r\n      //     console.log(data)\r\n      //     // const res = data.map(movie => {\r\n      //     // //   let temp = {}\r\n      //     // //   temp.id = movie.id\r\n      //     // //     return temp\r\n      //     // })\r\n      //     // console.log(res)\r\n      //   })\r\n      // }\r\n\r\n    film(){\r\n      let movieUrl = \"\".concat(baseUrl, `movie/popular?`,'api_key=', API_KEY, '&language=en-US&page=1') \r\n    fetch(movieUrl)\r\n    .then((results) => {\r\n      \r\n      return results.json();\r\n    })\r\n    .then((json) =>{\r\n      return json.results;\r\n    })\r\n      .then((data)=>{\r\n      \r\n      const res = data.map(movie => {\r\n        let temp = {}\r\n        // temp.id = movie.id\r\n        temp.title = movie.original_title\r\n        temp.overview = movie.overview\r\n        temp.poster = movie.poster_path\r\n          return temp\r\n      })\r\n      \r\n    })\r\n   }\r\n\r\n    handleChange =(event)=>{\r\n          this.setState({search: event.target.value})\r\n          this.search()\r\n      }\r\n  render() {  \r\n    const {search, poster, title,overview, link} = this.state\r\n      // document.addEventListener(\"DOMContentLoaded\", this.init);\r\n      return (\r\n        <React.Fragment>\r\n        <div className=\"container-fluid\" style={{marginTop:'10%',marginBottom:'10%', backgroundImage:\"url(assets/darkBackgd.jpg)\" } } onMouseOver={this.film}>\r\n      \r\n        {/* <div class=\"input-group input-group-sm mb-3\">\r\n          {/* <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\"></span>\r\n          </div> */}\r\n          {/* <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n        <pre></pre>\r\n        </div> */} \r\n  \r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {/* <div className=\"col\" style={{border:\"2px solid  black\"}}> */}\r\n                <div className=\"row justify-content-center\">\r\n                  {/* <div className=\"col-lg\">\r\n                    <input type=\"text\"/>\r\n                  </div> */}\r\n            \r\n                </div>\r\n                  <div className=\"row\" style={{color:'#ffff'}}>\r\n                    <h3>Popular Movies</h3>\r\n                    </div>\r\n                    {/* <input type=\"text\" value={search} onChange={this.handleChange} className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\"/> */}\r\n                    {/* <p>We artists are a different breed of people. We're a happy bunch.  \r\n                      If you hypnotize it, it will go away. Get away from those little Christmas tree\r\n                      things we used to make in school. The only prerequisite is that it makes you happy. \r\n                      If it makes you happy then it's good. This is gonna be a happy little seascape.\r\n                      Let's put some happy trees and bushes back in here.</p>\r\n                  </div> */}\r\n                  <div className=\"row justify-content-center\" style={{marginTop:'2rem', marginBottom:'2rem'}}>\r\n                  {/* <div className=\"card \" style={{width: '18rem'}}> */}\r\n                      <img className=\"col-6\" src={this.props.poster} alt=\"Card image cap\"/>\r\n                      <div className=\"card-body\" style={{backgroundColor:'#fff'}}>\r\n                        <h5 className=\"card-title\">{this.props.title}</h5>\r\n                        <p className=\"card-text\">{this.props.overview}</p>\r\n                        <a href={this.props.site} target=\"_blank\" className=\"btn btn-primary\">Go somewhere</a>\r\n                      </div>\r\n                 {/* </div> */}\r\n              </div>  \r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </div> */}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Body from './Body'\r\nimport './styles/Carousel.css'\r\n\r\nlet baseUrl = 'https://api.themoviedb.org/3/';\r\nlet configData = null;\r\nlet baseImgUrl = null;\r\n// let tvId = null;\r\n// let num = 0\r\nconst API_KEY = process.env.REACT_APP_TMDB_KEY\r\n\r\nexport default class Carousel extends Component {\r\n   constructor(props){\r\n     super(props)\r\n      this.state ={\r\n        movieId: 297802,\r\n        backdrop_path: '',\r\n        poster_path:'',\r\n        poster: '',\r\n        backDrop: '',\r\n        title: '',\r\n        overview: '',\r\n        site:''\r\n      }\r\n\r\n     this.config = this.config.bind(this)\r\n     this.NowPlayingId = this.NowPlayingId.bind(this)\r\n     this.findFilm = this.findFilm.bind(this)\r\n     this.componentDidMount = this.componentDidMount.bind(this)\r\n   }\r\n\r\n   componentDidMount(){\r\n      this.config()\r\n      this.NowPlayingId()\r\n      this.findFilm()\r\n      \r\n   }\r\n   config(){\r\n    let url = \"\".concat(baseUrl, 'configuration?', 'api_key=', API_KEY)\r\n    fetch(url)\r\n    .then((result) =>{\r\n       return result.json()\r\n    })\r\n    .then((data)=>{\r\n        baseImgUrl = data.images.secure_base_url;\r\n        configData = data.images;\r\n        let posterUrl = \"\".concat(baseImgUrl, configData.poster_sizes[3])\r\n        let backDropUrl = \"\".concat(baseImgUrl, configData.backdrop_sizes[3])\r\n        this.updateImage(posterUrl,backDropUrl ,this.state.poster_path,this.state.backdrop_path)\r\n    })\r\n   }\r\n   updateImage (posterUrl, backDropUrl,posterPath, backDropPath){\r\n      this.setState({\r\n       backDrop: backDropUrl.concat(backDropPath),\r\n       poster: posterUrl.concat(posterPath)\r\n      })\r\n    }\r\n   NowPlayingId(){\r\n    let playingUrl = \"\".concat(baseUrl, 'movie/now_playing?', 'api_key=', 'fe14b848bd02d9c1c51451133c5153c2', '&language=en-US&page=1')\r\n    fetch(playingUrl)\r\n    .then((results) => {\r\n      \r\n      return results.json();\r\n    })\r\n    .then((json) =>{\r\n      return json.results;\r\n    })\r\n      .then((data)=>{\r\n      \r\n      const res = data.map(movie => {\r\n        let temp = {}\r\n        temp.id = movie.id\r\n          return temp\r\n      })\r\n          let temp = []\r\n          res.forEach((element) => {\r\n           temp.push(element.id)\r\n          });\r\n          let index = Math.floor(Math.random() * 25) \r\n            this.giveId(temp,index)\r\n\r\n            this.findFilm()\r\n     \r\n            window.setInterval(this.NowPlayingId, 40050)\r\n    })\r\n  }\r\n\r\n\r\n  giveId(arr, index){\r\n    this.setState({\r\n      movieId: arr[index]\r\n    })\r\n\r\n      return arr[index]\r\n  }\r\n\r\n  findFilm(){\r\n    let movieUrl = \"\".concat(baseUrl, `movie/${this.state.movieId}?`,'api_key=', API_KEY, '&language=en-US&query=') \r\n    fetch(movieUrl)\r\n    .then((result) => { \r\n        return result.json()\r\n    })\r\n    .then((data) => {\r\n        //  Object.keys(id).forEach(element => {\r\n        //   console.log(element)\r\n        // })\r\n        let posterPath = data.poster_path\r\n        let backDropPath = data.backdrop_path\r\n        this.setState({\r\n           backdrop_path: backDropPath,\r\n           poster_path: posterPath,\r\n           title: data.original_title,\r\n           overview: data.overview,\r\n          site: data.homepage\r\n          })\r\n    })\r\n  \r\n    this.config()\r\n    \r\n  }\r\n\r\n\r\n     \r\n\r\n  render() {\r\n    document.addEventListener(\"DOMContentLoaded\", this)\r\n    const { poster, backDrop, title, overview, site } = this.state;\r\n    return (\r\n        <React.Fragment>\r\n        {/* <div className=\"backgroundImg\" style={{backgroundColor:'grey', backgroundImage: `url(${this.props.backDrop})`, backgroundRepeat:'no-repeat', backgroundSize:'cover', filter:'blur(8px)'}}></div> */}\r\n        <div className=\"jumbotron-fluid\" style={{ paddingTop:'5%', paddingBottom:'5%',backgroundColor:'grey', backgroundImage: `url(${backDrop})`, backgroundRepeat:'no-repeat', backgroundSize:'cover'}}>\r\n          <div className=\"container\">\r\n            <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\r\n              <div className=\"carousel-inner\">\r\n                <div className=\"carousel-item active\" >\r\n                  <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-4 text-center\">\r\n                          <img className=\"img-fluid\" src={poster} alt=\"poster 1\" height=\"350px\" width=\"250px\"/>\r\n                       </div>\r\n                       <div className=\"col-7 align-middle\" style={{color:'white'}}>\r\n                          <h3>{title}</h3>\r\n                          <p >{overview}</p>\r\n                        </div>\r\n                    </div>\r\n                      </div>\r\n                        <a className=\"carousel-control-prev\" onClick={this.prev} role=\"button\" data-slide=\"prev\">\r\n                          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                          <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a className=\"carousel-control-next\" onClick={this.giveId} role=\"button\" data-slide=\"next\">\r\n                          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                          <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Body title={title} overview={overview} poster={poster} site={site}/>\r\n          </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './styles/Footer.css'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n        <footer className=\"page-footer\" style={{backgroundColor:\"#2d2d2d\"}}>\r\n        <div className=\"footer-copyright text-center\" style={{color:\"#ffff\"}}>© 2018 Copyright:\r\n          <a href=\"https://www.themoviedb.org/\" target=\"_blank\"  rel=\"noopener noreferrer\" > Tmdb.com</a>\r\n        </div>\r\n      \r\n      \r\n      </footer>\r\n      \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch, } from 'react-router-dom'\nimport About from './components/About'\nimport Nav from './components/Nav'\nimport Carousel from './components/Carousel'\nimport Footer from './components/Footer'\nimport './App.css';\n\nclass App extends Component {\n\n    \n\n  render() {\n    return (\n      <Router>\n     <div className=\"background\" style={{backgroundImage: `url(assets/background-flash.gif)`, backgroundPosition:'center', backgroundRepeat:'no-repeat', backgroundSize:'cover', backgroundAttachment:'fixed',height:'100%'}}>\n      <Nav/>\n      <Switch>\n        {/* <div className=\"background\" style={{backgroundImage: `url(assets/background-flash.gif)`, backgroundPosition:'center', backgroundRepeat:'no-repeat', backgroundSize:'cover', backgroundAttachment:'fixed',height:'100%'}}></div> */}\n        <Route exact path=\"/\" component={Carousel}/>\n        <Route path=\"/about\" component={About}/>\n        </Switch>\n        <Footer/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}